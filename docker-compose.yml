version: '3'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.7.7-management
    ports:
      - "5672:5672"
      - "5673:5673"
      - "15672:15672"
    volumes:
      - ./rabbitmq/log:/var/log/rabbitmq
      - ./rabbitmq/data:/var/lib/rabbitmq
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3

  app1:
    build:
      context: .
      dockerfile: app1.Dockerfile
      args:
        APP_NAME: app1
    ports:
      - "9001:9000"
    volumes:
      - ./www/app1/public/app:/var/www/app1/public/app
      - ./www/app1/public/storage:/var/www/app1/public/storage
      - ./www/app1/public/routes:/var/www/app1/public/routes
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy


  app2:
    build:
      context: .
      dockerfile: app2.Dockerfile
    ports:
      - "9002:9000"
    volumes:
      - ./www/app2/public/storage:/var/www/app2/public/storage
      - ./www/app2/public/app:/var/www/app2/public/app
      - ./www/app2/public/routes:/var/www/app2/public/routes
    networks:
      - my-network
    depends_on:
      rabbitmq:
        condition: service_healthy


  nginx:
    image: nginx:latest
    ports:
      - "8001:8001"
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./www:/var/www
      - ./nginx/log:/var/log/nginx
    networks:
      - my-network
    depends_on:
      - app1
      - app2


networks:
  my-network:
    driver: bridge
